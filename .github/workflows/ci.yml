name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && github.sha || '' }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    container: docker://altendky/hydra:ubuntu-3-minors
    steps:
      - uses: actions/checkout@v1
      - name: Install and update
        run: |
          pip install --upgrade pip setuptools tox wheel
      - name: Report versions
        run: |
          python --version --version
          pip --version
          pip list
          pip freeze --all
      - name: Source distribution
        if: always()
        run: |
          python setup.py sdist
      - name: Wheel
        if: always()
        run: |
          pip wheel  --no-deps --wheel-dir dist/ .
      - name: Archive dist
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: desert-dist
          path: dist
  ci:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - version: "3.7"
            bin: python3.7
            tox: py37,report,codecov
          - version: "3.8"
            bin: python3.8
            tox: py38,report,codecov
          - version: "3.9"
            bin: python3.9
            tox: py39,report,codecov
          - version: "3.10"
            bin: python3.10
            tox: py310,report,codecov
          - version: "3.11"
            bin: python3.11
            tox: py311,report,codecov
          - version: pypy-3.7
            bin: pypy3
            tox: pypy3,report,codecov
    env:
      TOXTOOLPYTHON: "${{ matrix.python.bin }}"
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.version }}
      - name: Install
        run: |
          pip install tox
      - name: Test
        run: |
          tox -v -e "${{ matrix.python.tox }}"
  linting:
    name: Linting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.10"]
        toxenv:
          - doc
          - check
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: x64
      - name: Install
        run: |
          pip install tox
      - name: Test
        run: |
          tox -v -e "${{ matrix.toxenv }}"
  all:
    name: All
    runs-on: ubuntu-latest
    needs:
      - ci
      - linting
    steps:
      - name: This
        shell: python
        run: |
          import this
